#!/bin/bash

DOTFILES_REPO="https://github.com/Jorgedavyd/.dotfiles.git"
DOTFILES_DIR="$HOME/.dotfiles"

installDependencies() {
  if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    if command -v apt-get &> /dev/null; then
      sudo apt-get update
      sudo apt-get install -y stow ripgrep wget tmux i3 sed nvtop
      curl --proto '=https' --tlsv1.3 -sSf https://sh.rustup.rs | sh -s -- -y
      source $HOME/.cargo/env
      rustup default stable
      cargo install alacritty
      sudo apt-get install software-properties-common
      sudo add-apt-repository -y ppa:neovim-ppa/stable
      sudo apt-get update
      sudo apt-get install -y neovim
    elif command -v pacman &> /dev/null; then
      sudo pacman -Syu --noconfirm stow ripgrep fzf tmux i3-wm neovim alacritty xorg sed nvtop
      curl --proto '=https' --tlsv1.3 -sSf https://sh.rustup.rs | sh -s -- -y
      source $HOME/.cargo/env
      rustup default stable
    elif command -v yum &> /dev/null; then
      sudo yum install -y stow ripgrep tmux i3-wm neovim alacritty xorg fzf sed nvtop
      curl --proto '=https' --tlsv1.3 -sSf https://sh.rustup.rs | sh -s -- -y
      source $HOME/.cargo/env
      rustup default stable
    fi
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    if ! command -v brew &> /dev/null; then
      echo "Homebrew not found, installing..."
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    brew install stow ripgrep wget tmux i3 fzf sed nvtop
    brew install --cask alacritty
    brew install neovim
  else
    echo "Operating system not supported."
    exit 1
  fi
}

link_dotfiles() {
  mkdir -p "$HOME/.config"
  ln -sf "$DOTFILES_DIR/.zshrc" "$HOME/"
  ln -sf "$DOTFILES_DIR/nvim" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/alacritty" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/tmux" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/i3" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/scripts" "$HOME/.local/"
  ln -sf "$DOTFILES_DIR/hypr" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/neofetch" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/swaylock" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/swww" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/ags" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/dunst" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/rofi" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/cava" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/.xinitrc" "$HOME/"
  ln -sf "$DOTFILES_DIR/fonts" "$HOME/.local/share/"
}


main() {
  installDependencies
  git clone "$DOTFILES_REPO" "$DOTFILES_DIR" || { echo "Failed to clone dotfiles repo."; exit 1; }
  chmod -R +x "$DOTFILES_DIR/scripts/"
  chmod +x "$HOME/.xinitrc"
  link_dotfiles
}

main
