#!/bin/bash

DOTFILES_REPO="https://github.com/Jorgedavyd/.dotfiles.git"
DOTFILES_DIR="$HOME/.dotfiles"

installBashEnv() {
    git clone https://github.com/ohmybash/oh-my-bash.git ~/.oh-my-bash
    chsh -s /bin/bash
    source $HOME/.bashrc
};

installTmuxEnv() {
    git clone https://github.com/tmux-plugins/tpm $HOME/.config/tmux/plugins
};

setupRust() {
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    source $HOME/.cargo/env
    rustup default stable
};

installAGS() {
    git clone https://github.com/aylur/astal $HOME/builds && cd $HOME/builds/astal/lang/gjs
    meson setup --prefix /usr build
    meson install -C build
    git clone https://github.com/aylur/ags.git $HOME/builds && $HOME/builds/ags
    go install -ldflags "\
        -X 'main.gtk4LayerShell=$(pkg-config --variable=libdir gtk4-layer-shell-0)/libgtk4-layer-shell.so' \
        -X 'main.astalGjs=$(pkg-config --variable=srcdir astal-gjs)'"
    sudo mv $GOPATH/bin/ags /usr/bin/ags
};

installAlacritty() {
    git clone https://github.com/alacritty/alacritty.git $HOME/builds && cd $HOME/builds/alacritty
    cargo build --release --no-default-features --features=wayland
    sudo mv target/release/alacritty /usr/local/bin
    cp extra/completions/alacritty.bash ~/.bash_completion/alacritty
};

installSwww() {
    git clone https://github.com/LGFae/swww.git $HOME/builds && cd swww
    cargo build --release
    sudo mv target/release/swww /usr/local/bin
    sudo mv target/release/swww-daemon /usr/local/bin
};

installCava() {
    git clone https://github.com/karlstav/cava.git $HOME/builds && cd $HOME/builds/cava
    ./autogen.sh
    ./configure --prefix=/usr/local
    make
    sudo make install
};

installDependencies() {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        if command -v apt-get &> /dev/null; then
            ## update repos
            sudo apt-get update
            ## Setup the repos
            sudo add-apt-repository universe ## for hyprland
            sudo apt-get install software-properties-common ## for nvim
            sudo add-apt-repository -y ppa:neovim-ppa/stable ## for nvim
            ## install the per-repo programs
            sudo apt-get install -y python3 ripgrep curl wget tmux sed hyprland neovim neofetch go
            ## requirements of alacritty
            sudo apt-get install -y cmake g++ pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev
            ## requirements of cava
            sudo apt-get install -y build-essential libfftw3-dev libasound2-dev libpulse-dev libtool automake libiniparser-dev libsdl2-2.0-0 libsdl2-dev libpipewire-0.3-dev libjack-jackd2-dev pkgconf
            ## requirements for swww
            sudo apt-get update && sudo apt-get install -y python3 python3-pip
            pip install meson
            ## install the per-repo programs
            sudo apt-get update && sudo apt-get upgrade -y
        elif command -v pacman &> /dev/null; then
            sudo pacman -Syu --noconfirm ripgrep fzf tmux neovim alacritty sed go hyrpland
            ## requirements of cava
            sudo pacman -Syu --noconfirm base-devel fftw alsa-lib iniparser pulseaudio pkgconf
            ## requirements for alacritty
            sudo pacman -Syu --noconfirm cmake freetype2 fontconfig pkg-config make libxcb libxkbcommon python
            ## requirements for swww
            sudo pacman -Syu --noconfirm python python-pip
        else
            echo "Not a valid package manager"
            exit 1
        fi
        installAlacritty()
        installAGS()
        installSwww()
        installCava()
        installSwaylock()

    else
        echo "Operating system not supported."
        exit 1
    fi
};

link_dotfiles() {
  mkdir -p "$HOME/.config"
  ln -sf "$DOTFILES_DIR/zsh/.zshrc" "$HOME"
  ln -sf "$DOTFILES_DIR/bash/.bashrc" "$HOME"
  ln -sf "$DOTFILES_DIR/bash/.bash_profile" "$HOME"
  ln -sf "$DOTFILES_DIR/nvim" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/alacritty" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/tmux" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/i3" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/scripts" "$HOME/.local/"
  ln -sf "$DOTFILES_DIR/hypr" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/neofetch" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/swaylock" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/swww" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/ags" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/cava" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/zathura" "$HOME/.config/"
  ln -sf "$DOTFILES_DIR/.xinitrc" "$HOME/"
  ln -sf "$DOTFILES_DIR/fonts" "$HOME/.local/share/"
  ln -s "$DOTFILES_DIR/zsh/lambda-dragon.zsh-theme" "$HOME/.oh-my-zsh/custom/themes/"
};

main() {
  installDependencies
  git clone "$DOTFILES_REPO" "$DOTFILES_DIR" || { echo "Failed to clone dotfiles repo."; exit 1; }
  chmod +x "$DOTFILES_DIR/scripts/*"
  chmod +x "$HOME/.xinitrc"
  link_dotfiles
  installTmuxEnv
  installBashEnv
}

main
